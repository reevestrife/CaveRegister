@model CaveRegister.Models.CaveViewModel
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Cave</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Model.CaveID)
        <div class="form-group">
            @Html.LabelFor(model => model.Model.SasaCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model.SasaCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model.SasaCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

		<div class="form-group">
			@Html.LabelFor(model => model.SelectedCaveStatuses, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.ListBoxFor(m => m.SelectedCaveStatuses, Model.CaveStatusSelectList,new { @class = "chosen", multiple = "multiple", style = "width: 350px;" })
				@Html.ValidationMessageFor(model => model.SelectedCaveStatuses, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.SelectedCaveAttributes, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.ListBoxFor(m => m.SelectedCaveAttributes, Model.CaveAttributeSelectList, new { @class = "chosen", multiple = "multiple", style = "width: 350px;" })
				@Html.ValidationMessageFor(model => model.SelectedCaveAttributes, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Model.ExplorationStatusID, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("Model.ExplorationStatusID", Model.ExplorationStatusSelectList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Model.ExplorationStatusID, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.SelectedGeologies, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.ListBoxFor(m => m.SelectedGeologies, Model.GeologySelectList, new { @class = "chosen", multiple = "multiple", style = "width: 350px;" })
				@Html.ValidationMessageFor(model => model.SelectedGeologies, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.SelectedEaseOfAccesses, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.ListBoxFor(m => m.SelectedEaseOfAccesses, Model.EaseOfAccessSelectList, new { @class = "chosen", multiple = "multiple", style = "width: 350px;" })
				@Html.ValidationMessageFor(model => model.SelectedEaseOfAccesses, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Model.LocationStatusID, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("Model.LocationStatusID", Model.LocationStatusSelectList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Model.LocationStatusID, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Model.ProvinceID, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("Model.ProvinceID", Model.ProvincesSelectList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Model.ProvinceID, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Model.TotalExtension, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Model.TotalExtension, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Model.TotalExtension, "", new { @class = "text-danger" })
			</div>
		</div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model.Folder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model.Folder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model.Folder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model.Reference, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model.Reference, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model.Reference, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model.Depth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model.Depth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model.Depth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model.Location, "", new { @class = "text-danger" })
            </div>
        </div>
        
		<div class="form-group">
            @Html.LabelFor(model => model.Model.LandOwnerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model.LandOwnerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model.LandOwnerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model.LandOwnerPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model.LandOwnerPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model.LandOwnerPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model.LandOwnerEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model.LandOwnerEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model.LandOwnerEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model.DbGeography_LandOwner, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model.DbGeography_LandOwner, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model.DbGeography_LandOwner, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model.LandOwnerDetails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model.LandOwnerDetails, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model.LandOwnerDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Model.Geology, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model.Geology, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model.Geology, "", new { @class = "text-danger" })
            </div>
        </div>*@
         <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@Html.Action("Index", "Entrances", new { id = Model.Model.CaveID })

@Html.Action("Index", "VisitHistories", new { id = Model.Model.CaveID })

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
